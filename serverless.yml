service:
  name: ${self:custom.NAME}

frameworkVersion: ">=1.48.0"

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-1
  stage: ${self:custom.STAGE}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:GetObject'
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - ${self:custom.CONTENTS_BUCKET_NAME}/
            - ${self:custom.CONTENTS_KEY_PREFIX}/
            - '*'

plugins:
  - deploy

custom:
  NAME: portfolio
  STAGE: ${file(./.configs/env.json):STAGE}
  AWS_S3_BUCKET_NAME: ${file(./.configs/env.json):AWS_S3_BUCKET_NAME}
  APP_ENV: ${file(./.configs/env.json):APP_ENV}
  SERVER_ENV: ${file(./.configs/env.json):SERVER_ENV}
  CONTENTS_BUCKET_NAME: ${file(./.configs/env.json):CONTENTS_BUCKET_NAME}
  CONTENTS_KEY_PREFIX: ${file(./.configs/env.json):CONTENTS_KEY_PREFIX}
  deploy:
    config: ${file(./.configs/deploy.config.json)}
    s3:
      name: ${self:custom.AWS_S3_BUCKET_NAME}
    cloudfront:
      comment: 'My portfolio: ${file(./.configs/env.json):STAGE}'


package:
  excludeDevDependencies: true
  exclude:
    - .**
    - .**/*
    - client/**
    - server/**
    - serverless-plugins/**
    - bin/**
    - scripts/**
    - LICENSE
    - README.md
    - package.json
    - yarn.lock
    - nodemon-dev.json
    - tsconfig.json
    - nuxt.config.ts
    - yarn-error.log
    - node_modules/aws-sdk/**
  include:
    - .lambda/**
    - .nuxt/**
    - client/tailwind.config.js


functions:
  app:
    handler: .lambda/server/handler.appHandler
    timeout: 30
    memorySize: 128
    environment:
      NODE_ENV: production
      APP_ENV: ${self:custom.APP_ENV}
      SERVER_ENV: ${self:custom.SERVER_ENV}
      CONTENTS_BUCKET_NAME: ${self:custom.CONTENTS_BUCKET_NAME}
      CONTENTS_KEY_PREFIX: ${self:custom.CONTENTS_KEY_PREFIX}
    events:
      - http:
          path: '/'
          method: get
      - http:
          path: '{proxy+}'
          method: get
